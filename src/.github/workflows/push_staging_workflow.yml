
name: PUSH Staging Workflow

on:
  push:
    branches:
      - staging

jobs:
  app-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:10.4.27
        env:
          MARIADB_ROOT_PASSWORD: ${{ secrets.DB_STAGING_PASSWORD }}
          MARIADB_DATABASE: ${{ secrets.DB_STAGING_NAME }}
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install NPM
        run: npm install && npm run build
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Generate Key
        run: php artisan key:generate
      - name: Run migrations and Execute tests
        env:
          DB_CONNECTION: mysql
          DB_PORT: 3307
          DB_USER: root
          DB_PASSWORD: ${{ secrets.DB_STAGING_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_STAGING_NAME }}
        run: |
          php artisan migrate --seed
          php artisan test
  deploy-staging:
    name: Deploy Project to STAGING Server
    runs-on: ubuntu-latest
    needs: [app-tests]
    if: github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extension-csv: mbstring, bcmath
      - name: Composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Deploy to Staging
        uses: appleboy/ssh-action@master
        env:
            DOT_ENV: ${{ secrets.DOT_ENV_STAGING }}
            PAT: ${{ secrets.PAT }}
            DEPLOY_PATH_STAGING: ${{ secrets.DEPLOY_PATH_STAGING }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DOT_ENV, PAT, DEPLOY_PATH_STAGING
          script: |
            sudo mkdir -p /tmp/staging/repo
            sudo chmod -R 777 /tmp/staging/repo
            cd /tmp/staging && git clone https://$PAT@github.com/monitecture/repo.git
            cd /tmp/staging/repo
            sudo git checkout staging
            sudo touch .env
            echo "$DOT_ENV" | sudo tee /tmp/staging/repo/.env
            composer install
            sudo php artisan migrate:refresh --seed && sudo php artisan test
            composer require --dev knuckleswtf/scribe
            sudo php artisan scribe:generate && php artisan config:clear
            sudo rm -r $DEPLOY_PATH_STAGING/repo-old
            sudo mv $DEPLOY_PATH_STAGING/repo $DEPLOY_PATH_STAGING/repo-old
            sudo mkdir -p $DEPLOY_PATH_STAGING/repo
            sudo cp -r /tmp/staging/repo/* $DEPLOY_PATH_STAGING/repo
            sudo rm -r /tmp/staging/repo
            echo "$DOT_ENV" | sudo tee $DEPLOY_PATH_STAGING/repo/.env
            sudo chmod -R 0755 $DEPLOY_PATH_STAGING/repo
            sudo chmod -R ugo+rw $DEPLOY_PATH_STAGING/repo/storage


